#
# puppet: ./modules/htcondor/templates/etc/condor/config.d/00worker.conf.erb
#
#         (Attention: changes will be overwritten by puppet)
#
DAEMON_LIST = MASTER, STARTD
DEFAULT_DOMAIN_NAME = docker-welt
UID_DOMAIN = docker-welt
FILESYSTEM_DOMAIN = $(UID_DOMAIN)
#ALLOW_WRITE = *.$(UID_DOMAIN)
#ALLOW_READ = *.$(UID_DOMAIN)
ALLOW_WRITE = *
ALLOW_READ = *
CONDOR_ADMIN = goegrid_admin@physik.uni-goettingen.de
CONDOR_HOST = htcondor_master
COLLECTOR_NAME = Test Condor Pool - $(CONDOR_HOST)
#ALLOW_WRITE = $(CONDOR_HOST)
StartJobs = true
STARTD_ATTRS = StartJobs, $(STARTD_ATTRS)
# When is this node willing to run jobs?
#START = (NODE_IS_HEALTHY =?= True) && 
START = (StartJobs =?= True)

# Permanent way of stopping jobs from starting
HOSTALLOW_CONFIG = $(CONDOR_HOST)
ALLOW_CONFIG = $(CONDOR_HOST)
ENABLE_RUNTIME_CONFIG = True
RUNTIME_CONFIG_ADMIN = $(CONDOR_HOST)
STARTD.SETTABLE_ATTRS_ADMINISTRATOR = StartJobs
ENABLE_PERSISTENT_CONFIG = True
PERSISTENT_CONFIG_DIR = /etc/condor/persistent

## Added this property
COLLECTOR.ALLOW_ADVERTISE_MASTER = $(CONDOR_HOST)



# use one shared port
USE_SHARED_PORT = False
#SHARED_PORT_ARGS = -p 9620
#COLLECTOR_HOST = $(CONDOR_HOST):9618


# Enable CGROUP control
BASE_CGROUP = /system.slice/condor.service
# hard: job can't access more physical memory than allocated
# soft: job can access more physical memory than allocated when there are free memory
CGROUP_MEMORY_LIMIT_POLICY = soft

# slots
NUM_SLOTS = 1
NUM_SLOTS_TYPE_1 = 1
SLOT_TYPE_1 = 100%
SLOT_TYPE_1_PARTITIONABLE = true
#COUNT_HYPERTHREAD_CPUS = false
COUNT_HYPERTHREAD_CPUS = true

# some experimental stuff that should go into the WN conf later ...
# startd hook to check if node is healthy
##STARTD_CRON_JOBLIST = NODEHEALTH
##STARTD_CRON_NODEHEALTH_EXECUTABLE = /etc/condor/tests/healthcheck_wn_condor.sh
##STARTD_CRON_NODEHEALTH_PERIOD = 180s
##STARTD_CRON_NODEHEALTH_MODE = Periodic

# Running hook at job exit to collect accounting information and send them to InfluxDB
# HOOK_JOB_EXIT = /usr/local/sbin/job_exit_accounting.py
# ACCOUNTING_HOOK_JOB_EXIT = /usr/local/sbin/job_exit_accounting.py

MaxJobRetirementTime  = 259200
MachineMaxVacateTime  = 1800


#ALL_DEBUG = D_ALL